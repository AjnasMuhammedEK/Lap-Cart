<%- include("../../views/partials/admin/header") %>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Edit Products</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs@1.5.12/dist/cropper.min.css">
    <style>
        body {
            background-color: #151521;
            color: #fff;
            overflow-x: hidden;
        }
        
        .main-content {
            margin-left: 360px;
            padding: 10px;
            max-height: 100vh;
            overflow-y: auto;
        }
        
        .form-container {
            background-color: #222;
            border-radius: 8px;
            padding: 25px;
            max-width: 800px;
            margin: 0 auto;
            margin-bottom: 50px;
        }
        
        .form-title {
            margin-bottom: 25px;
        }
        
        .image-preview {
            width: 150px;
            height: 150px;
            background-color: #333;
            background-position: center;
            background-size: cover;
            background-repeat: no-repeat;
            border: 1px solid #444;
            margin-bottom: 15px;
            position: relative;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 4px;
        }
        
        .image-preview:hover::after {
            content: "Click to crop";
            position: absolute;
            background: rgba(0,0,0,0.7);
            width: 100%;
            height: 100%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 12px;
            border-radius: 4px;
        }
        
        .image-preview-empty::before {
            content: "+";
            font-size: 40px;
            color: #666;
        }
        
        .image-preview-container {
            display: flex;
            gap: 15px;
            margin-bottom: 15px;
            flex-wrap: wrap;
        }
        
        .delivery-options {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 10px;
            margin-top: 10px;
        }
        
        .delivery-option {
            background-color: #333;
            border: 1px solid #444;
            padding: 8px;
            text-align: center;
            border-radius: 4px;
        }
        
        .add-product-btn {
            background-color: #42b883;
            border: none;
            padding: 8px 20px;
            border-radius: 4px;
            color: white;
            font-weight: bold;
            margin-top: 20px;
            transition: all 0.3s;
        }
        
        .add-product-btn:hover {
            background-color: #36a574;
            transform: translateY(-2px);
        }
        
        .form-label {
            margin-bottom: 5px;
            font-size: 14px;
            color: #ccc;
        }
        
        .form-control {
            background-color: #333;
            border: 1px solid #444;
            color: white;
        }
        
        .form-control:focus {
            background-color: #333;
            color: white;
            border-color: #0d6efd;
            box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
        }
        
        .error-message {
            color: #ff6b6b;
            font-size: 12px;
            margin-top: 5px;
            display: none;
        }
        
        /* Modal Styles */
        .crop-modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.8);
        }
        
        .crop-modal-content {
            position: relative;
            background-color: #333;
            margin: 5% auto;
            padding: 20px;
            width: 80%;
            max-width: 600px;
            border-radius: 8px;
        }
        
        .crop-container {
            width: 100%;
            height: 400px;
            margin-bottom: 20px;
        }
        
        .crop-buttons {
            display: flex;
            justify-content: flex-end;
            gap: 10px;
        }
        
        .crop-btn {
            padding: 8px 16px;
            border-radius: 4px;
            border: none;
            cursor: pointer;
        }
        
        .crop-btn-cancel {
            background-color: #6c757d;
            color: white;
        }
        
        .crop-btn-crop {
            background-color: #42b883;
            color: white;
        }
        
        .close-modal {
            position: absolute;
            top: 10px;
            right: 15px;
            font-size: 24px;
            color: #aaa;
            cursor: pointer;
        }
        
        .close-modal:hover {
            color: white;
        }
        
        .hidden-file-input {
            position: absolute;
            width: 1px;
            height: 1px;
            padding: 0;
            margin: -1px;
            overflow: hidden;
            clip: rect(0, 0, 0, 0);
            border: 0;
        }
        
        .alert-success {
            background-color: #42b883;
            color: white;
            padding: 15px;
            border-radius: 4px;
            margin-bottom: 20px;
        }
        
        .scroll-top-btn {
            position: fixed;
            bottom: 20px;
            right: 20px;
            width: 40px;
            height: 40px;
            background-color: #42b883;
            color: white;
            border: none;
            border-radius: 50%;
            cursor: pointer;
            display: none;
            align-items: center;
            justify-content: center;
            font-size: 20px;
            z-index: 99;
        }
        
        .scroll-top-btn:hover {
            background-color: #36a574;
        }
        
        .image-wrapper {
            position: relative;
        }
        
        .delete-image-btn {
            position: absolute;
            top: -10px;
            right: -10px;
            background-color: #ff4444;
            color: white;
            border: none;
            border-radius: 50%;
            width: 24px;
            height: 24px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            font-size: 14px;
            z-index: 10;
        }
        
        .delete-image-btn:hover {
            background-color: #cc0000;
        }
    </style>
</head>
<body>
    <div class="main-content" id="mainContent">
        <div class="form-container">
            <h4 class="form-title">Edit Product</h4>
            
            <% if(locals.success) { %>
                <div class="alert-success">
                    Product updated successfully!
                </div>
            <% } %>
            
            <form action="/admin/editProduct/<%= product._id %>" method="post" enctype="multipart/form-data" id="editProductForm">
                <div class="row">
                    <div class="col-md-12 mb-4">
                        <div class="mb-3">
                            <label class="form-label">Product Images (Up to 3):</label>
                            <div class="image-preview-container">
                                 <div class="image-wrapper">
                                    <div class="image-preview <%= product.productImage && product.productImage[0] ? '' : 'image-preview-empty' %>" 
                                        id="imagePreview0" 
                                        onclick="triggerFileInput(0)"
                                        style="<%= product.productImage && product.productImage[0] ? `background-image: url('/uploads/product-images/${product.productImage[0]}')` : '' %>">
                                    </div>
                                    <% if(product.productImage && product.productImage[0]) { %>
                                        <button type="button" class="delete-image-btn" onclick="deleteSingleImage('<%=product.productImage[0]%>','<%=product._id%>', 0)">×</button>
                                    <% } %>
                                </div>
                                
                                 <div class="image-wrapper">
                                    <div class="image-preview <%= product.productImage && product.productImage[1] ? '' : 'image-preview-empty' %>" 
                                        id="imagePreview1"
                                        onclick="triggerFileInput(1)"
                                        style="<%= product.productImage && product.productImage[1] ? `background-image: url('/uploads/product-images/${product.productImage[1]}')` : '' %>">
                                    </div>
                                    <% if(product.productImage && product.productImage[1]) { %>
                                        <button type="button" class="delete-image-btn" onclick="deleteSingleImage('<%=product.productImage[1]%>','<%=product._id%>', 1)">×</button>
                                    <% } %>
                                </div>
                                
                                 <div class="image-wrapper">
                                    <div class="image-preview <%= product.productImage && product.productImage[2] ? '' : 'image-preview-empty' %>" 
                                        id="imagePreview2"
                                        onclick="triggerFileInput(2)"
                                        style="<%= product.productImage && product.productImage[2] ? `background-image: url('/uploads/product-images/${product.productImage[2]}')` : '' %>">
                                    </div>
                                    <% if(product.productImage && product.productImage[2]) { %>
                                        <button type="button" class="delete-image-btn" onclick="deleteSingleImage('<%=product.productImage[2]%>','<%=product._id%>', 2)">×</button>
                                    <% } %>
                                </div>
                            </div>
                            
                             <input type="file" class="hidden-file-input" id="productImage0" name="images" 
                                accept="image/png, image/jpeg, image/jpg" onchange="handleFileSelect(event, 0)">
                            <input type="file" class="hidden-file-input" id="productImage1" name="images" 
                                accept="image/png, image/jpeg, image/jpg" onchange="handleFileSelect(event, 1)">
                            <input type="file" class="hidden-file-input" id="productImage2" name="images" 
                                accept="image/png, image/jpeg, image/jpg" onchange="handleFileSelect(event, 2)">
                            
                             <input type="hidden" id="croppedImage0" name="croppedImages">
                            <input type="hidden" id="croppedImage1" name="croppedImages">
                            <input type="hidden" id="croppedImage2" name="croppedImages">
                            
                             <input type="hidden" id="imagePositions" name="imagePositions" value="">
                            
                            <div id="images-error" class="error-message"></div>
                            <div class="mt-2">
                                <span class="text-muted" style="font-size: 12px;">Click on any box to upload and crop image</span>
                            </div>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="mb-3">
                            <label for="productName" class="form-label">Product Name:</label>
                            <input type="text" class="form-control" id="productName" name="productName" value="<%=product.productName%>">
                            <div id="productName-error" class="error-message"></div>
                        </div>
                        
                        <div class="mb-3">
                            <label for="productDescription" class="form-label">Product Description:</label>
                            <textarea class="form-control" id="productDescription" name="productDescription" rows="3"><%=product.description%></textarea>
                            <div id="description-error" class="error-message"></div>
                        </div>
                        
                        <div class="mb-3">
                            <label for="brand" class="form-label">Brand:</label>
                            <select class="form-control" id="brand" name="brand">
                                <%for(let i = 0; i < brand.length; i++){%>
                                    <option value="<%= brand[i].brandName %>" <%= product.brand === brand[i].brandName ? 'selected' : '' %>>
                                        <%=brand[i].brandName%>
                                    </option>
                                <%}%>
                            </select>
                        </div>
                        
                        <div class="mb-3">
                            <label for="productAmount" class="form-label">Regular Price:</label>
                            <input type="text" class="form-control" id="productAmount" name="productAmount" value="<%=product.regularPrice%>">
                            <div id="regularPrice-error" class="error-message"></div>
                        </div>
                    </div>
                    
                    <div class="col-md-6">
                         
                        <div class="mb-3">
                            <label for="category" class="form-label">Category:</label>
                            <select class="form-control" id="category" name="category">
                                <%for(let i = 0; i < cat.length; i++){%>
                                <option value="<%=cat[i]._id%>" <%= product.category && product.category.toString() === cat[i]._id.toString() ? 'selected' : '' %>>
                                    <%=cat[i].name%>
                                </option>
                                <%}%>
                            </select>
                        </div>
                        
                        <div class="mb-3">
                            <label for="salePrice" class="form-label">Sale Price:</label>
                            <input type="text" class="form-control" id="salePrice" name="salePrice" value="<%=product.salePrice%>">
                            <div id="salePrice-error" class="error-message"></div>
                        </div>
                        
                        <div class="mb-3">
                            <label for="stockCount" class="form-label">Stock Count:</label>
                            <input type="number" class="form-control" id="stockCount" name="stockCount" value="<%=product.quantity%>">
                            <div id="quantity-error" class="error-message"></div>
                        </div>
                    </div>

                    <hr>


                        <label for="" style="color: #ffffff; font-weight: bolder;">Spec Of this Laptop</label>

                        <br><br>


                        <div class="mb-3">
                            <label for="stockCount" class="form-label">Processor</label>
                            <input type="text" class="form-control" id="processor" name="processor" value="<%=product.processor%>">
                            <div id="processor-error" class="error-message"></div>
                        </div>

                        
                        <div class="mb-3">
                            <label for="stockCount" class="form-label">Storage</label>
                            <input type="text" class="form-control" id="storage" name="storage" value="<%=product.storage%>">
                            <div id="storage-error" class="error-message"></div>
                        </div>


                     


                        <div class="mb-3">
                            <label for="stockCount" class="form-label">Ram</label>
                            <input type="text" class="form-control" id="ram" name="ram" value="<%=product.ram%>">
                            <div id="ram-error" class="error-message"></div>
                        </div>


                        
                        <div class="mb-3">
                            <label for="stockCount" class="form-label">Graphics Card</label>
                            <input type="text" class="form-control" id="graphicsCard" name="graphicsCard" value="<%=product.graphicsCard%>">
                            <div id="graphicsCard-error" class="error-message"></div>
                        </div>


                    
                    <div class="col-12 text-end">
                        <button type="button" onclick="validateAndSubmit()" class="add-product-btn">UPDATE PRODUCT</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
    
    <!-- modal for crop img -->
    <div id="cropModal" class="crop-modal">
        <div class="crop-modal-content">
            <span class="close-modal" onclick="closeCropModal()">×</span>
            <h5>Crop Image</h5>
            <div class="crop-container">
                <img id="cropImage" src="" alt="Image to crop">
            </div>
            <div class="crop-buttons">
                <button class="crop-btn crop-btn-cancel" onclick="closeCropModal()">Cancel</button>
                <button class="crop-btn crop-btn-crop" onclick="cropImage()">Crop</button>
            </div>
        </div>
    </div>
    
     <button id="scrollTopBtn" class="scroll-top-btn" onclick="scrollToTop()">↑</button>
    
     <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/cropperjs@1.5.12/dist/cropper.min.js"></script>

    <script>
         
let cropper;
let currentImageIndex;
let croppedFiles = [];
let imagesToRemove = [];
let updatedPositions = [];

function triggerFileInput(index) {
    document.getElementById(`productImage${index}`).click();
}

function handleFileSelect(event, index) {
    const file = event.target.files[0];
    if (!file) return;
    
    currentImageIndex = index;
    
    const reader = new FileReader();
    reader.onload = function(e) {
        const cropModal = document.getElementById('cropModal');
        const cropImage = document.getElementById('cropImage');
        
        cropImage.src = e.target.result;
        cropModal.style.display = 'block';
        
        cropImage.onload = function() {
            if (cropper) {
                cropper.destroy();
            }
            
            cropper = new Cropper(cropImage, {
                aspectRatio: 1,
                viewMode: 1,
                dragMode: 'move',
                autoCropArea: 0.8,
                restore: false,
                guides: true,
                center: true,
                highlight: false,
                cropBoxMovable: true,
                cropBoxResizable: true,
                toggleDragModeOnDblclick: false
            });
        };
    };
    
    reader.readAsDataURL(file);
}

function closeCropModal() {
    const cropModal = document.getElementById('cropModal');
    cropModal.style.display = 'none';
    
    if (cropper) {
        cropper.destroy();
        cropper = null;
    }
}

function cropImage() {
    if (!cropper) return;

    const canvas = cropper.getCroppedCanvas({
        width: 440,
        height: 440,
        fillColor: '#fff',
        imageSmoothingEnabled: true,
        imageSmoothingQuality: 'high',
    });

    canvas.toBlob(function(blob) {
        const imagePreview = document.getElementById(`imagePreview${currentImageIndex}`);
        const croppedImageInput = document.getElementById(`croppedImage${currentImageIndex}`);
        
        imagePreview.style.backgroundImage = `url('${canvas.toDataURL()}')`;
        imagePreview.classList.remove('image-preview-empty');
        
        croppedImageInput.value = canvas.toDataURL('image/jpeg', 0.9);
        
         if (!updatedPositions.includes(currentImageIndex)) {
            updatedPositions.push(currentImageIndex);
        }
        
         document.getElementById('imagePositions').value = updatedPositions.join(',');

        const croppedFile = new File([blob], `cropped-image-${currentImageIndex}.jpg`, { type: 'image/jpeg' });
        croppedFiles[currentImageIndex] = croppedFile;

        closeCropModal();
        
        const imageWrapper = imagePreview.closest('.image-wrapper');
        if (!imageWrapper.querySelector('.delete-image-btn')) {
            const deleteBtn = document.createElement('button');
            deleteBtn.className = 'delete-image-btn';
            deleteBtn.innerHTML = '×';
            deleteBtn.setAttribute('type', 'button');
            deleteBtn.setAttribute('onclick', `removeNewImage(${currentImageIndex})`);
            imageWrapper.appendChild(deleteBtn);
        }
    }, 'image/jpeg', 0.9);
}

function removeNewImage(index) {
    const imagePreview = document.getElementById(`imagePreview${index}`);
    const croppedImageInput = document.getElementById(`croppedImage${index}`);
    const fileInput = document.getElementById(`productImage${index}`);
    
    imagePreview.style.backgroundImage = '';
    imagePreview.classList.add('image-preview-empty');
    croppedImageInput.value = '';
    fileInput.value = '';
    
     const posIndex = updatedPositions.indexOf(index);
    if (posIndex !== -1) {
        updatedPositions.splice(posIndex, 1);
        document.getElementById('imagePositions').value = updatedPositions.join(',');
    }
    
    const deleteBtn = imagePreview.closest('.image-wrapper').querySelector('.delete-image-btn');
    if (deleteBtn) {
        deleteBtn.remove();
    }
}

function deleteSingleImage(imageName, productId, index) {
    if (confirm('Are you sure you want to delete this image?')) {
        if (!imagesToRemove.includes(imageName)) {
            imagesToRemove.push(imageName);
        }
        
        let removeInput = document.getElementById('removedImages');
        if (!removeInput) {
            removeInput = document.createElement('input');
            removeInput.type = 'hidden';
            removeInput.id = 'removedImages';
            removeInput.name = 'removedImages';
            document.getElementById('editProductForm').appendChild(removeInput);
        }
        removeInput.value = imagesToRemove.join(',');
        
        const imagePreview = document.getElementById(`imagePreview${index}`);
        imagePreview.style.backgroundImage = '';
        imagePreview.classList.add('image-preview-empty');
        
        const deleteBtn = imagePreview.closest('.image-wrapper').querySelector('.delete-image-btn');
        if (deleteBtn) {
            deleteBtn.remove();
        }
        
        fetch(`/admin/deleteProductImage/${productId}/${imageName}`, {
            method: 'DELETE'
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                console.log("Image deleted successfully");
            } else {
                console.error("Failed to delete image:", data.error);
            }
        })
        .catch(error => console.error('Error:', error));
    }
}

function validateForm() {
    clearErrorMessages();
    const name = document.getElementById('productName').value;
    const description = document.getElementById('productDescription').value;
    const price = document.getElementById('productAmount').value;
    const salePrice = document.getElementById('salePrice').value;
    const stockCount = document.getElementById('stockCount').value;
    const processor = document.getElementById('processor').value
    const storage = document.getElementById('storage').value
    const ram = document.getElementById('ram').value
    const graphicsCard = document.getElementById('graphicsCard').value

    
    let isValid = true;
    
    if (name.trim() === "") {
        displayErrorMessage('productName-error', 'Please enter a product name.');
        isValid = false;
    } else if (!/^[a-zA-Z0-9\s]+$/.test(name.trim())) {
        displayErrorMessage('productName-error', 'Product name should contain only alphanumeric characters.');
        isValid = false;
    }
    
    if (description.trim() === "") {
        displayErrorMessage('description-error', 'Please enter a product description.');
        isValid = false;
    }
    
    if (stockCount === "" || parseInt(stockCount) < 0) {
        displayErrorMessage('quantity-error', 'Please enter a valid non-negative quantity.');
        isValid = false;
    }
    
    if (!/^\d+(\.\d{1,2})?$/.test(price) || parseFloat(price) <= 0) {
        displayErrorMessage('regularPrice-error', 'Please enter a valid positive price.');
        isValid = false;
    }
    
    if (!/^\d+(\.\d{1,2})?$/.test(salePrice) || parseFloat(salePrice) <= 0) {
        displayErrorMessage('salePrice-error', 'Please enter a valid positive sale price.');
        isValid = false;
    }
    
    if (parseFloat(price) <= parseFloat(salePrice)) {
        displayErrorMessage('regularPrice-error', 'Regular price must be greater than sale price.');
        isValid = false;
    }
    if (processor.trim() === "") {
                displayErrorMessage('processor-error', "Please enter product's processor detailes.");
                isValid = false;
            }

            if (storage.trim() === "") {
                displayErrorMessage('storage-error', "Please enter product's storage detailes.");
                isValid = false;
            }

            if (ram.trim() === "") {
                displayErrorMessage('ram-error', "Please enter product's Ram detailes.");
                isValid = false;
            }
            
            if (graphicsCard.trim() === "") {
                displayErrorMessage('graphicsCard-error', "Please enter product's Graphics Card detailes.");
                isValid = false;
            }
   
    
    const hasExistingImage = document.getElementById('imagePreview0').style.backgroundImage || 
                             document.getElementById('imagePreview1').style.backgroundImage || 
                             document.getElementById('imagePreview2').style.backgroundImage;
                             
    if (!hasExistingImage) {
        displayErrorMessage("images-error", 'At least one product image is required.');
        isValid = false;
    }

    
    return isValid;
}

function displayErrorMessage(elementId, message) {
    const errorElement = document.getElementById(elementId);
    if (errorElement) {
        errorElement.innerText = message;
        errorElement.style.display = "block";
    }
}

function clearErrorMessages() {
    const errorElements = document.getElementsByClassName('error-message');
    Array.from(errorElements).forEach(element => {
        element.innerText = '';
        element.style.display = "none";
    });
}

function validateAndSubmit() {
    if (validateForm()) {
         document.getElementById('imagePositions').value = updatedPositions.join(',');
        document.getElementById('editProductForm').submit();
    }
}

window.onscroll = function() {
    scrollFunction();
};

function scrollFunction() {
    const scrollBtn = document.getElementById("scrollTopBtn");
    if (document.getElementById("mainContent").scrollTop > 300 || document.documentElement.scrollTop > 300) {
        scrollBtn.style.display = "flex";
    } else {
        scrollBtn.style.display = "none";
    }
}

function scrollToTop() {
    document.getElementById("mainContent").scrollTo({
        top: 0,
        behavior: 'smooth'
    });
    document.documentElement.scrollTo({
        top: 0,
        behavior: 'smooth'
    });
}
    </script>
</body>
</html>
<%- include("../../views/partials/admin/footer") %>