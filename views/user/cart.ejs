<%- include("../partials/user/header.ejs") %>
<style>
  * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }

  body {
    font-family: 'Poppins', sans-serif;
    line-height: 1.6;
    color: #333;
    background: #f8f9fa;
  }

  .cart-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 20px;
  }

  .cart-header {
    background: #007bff;
    padding: 40px 0;
    text-align: center;
    color: #fff;
    margin-bottom: 30px;
  }

  .cart-header h1 {
    font-size: 2.2rem;
    font-weight: 600;
  }

  .cart-content {
    padding: 20px 0;
  }

  .cart-products {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 20px;
    margin-bottom: 40px;
  }

  .cart-product {
    background: #fff;
    border-radius: 8px;
    padding: 20px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
    transition: box-shadow 0.2s ease;
  }

  .cart-product:hover {
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
  }

  .cart-product img {
    width: 180px;
    height: 180px;
    object-fit: cover;
    border-radius: 5px;
    margin: 0 auto 15px;
    display: block;
  }

  .cart-product h5 {
    font-size: 1.2rem;
    font-weight: 600;
    margin-bottom: 8px;
  }

  .cart-product .details {
    font-size: 0.9rem;
    color: #666;
    margin-bottom: 5px;
  }

  .cart-product .stock {
    font-size: 0.9rem;
    font-weight: 500;
    margin-bottom: 10px;
  }

  .cart-product .stock.available {
    color: #28a745;
  }

  .cart-product .stock.unavailable {
    color: #dc3545;
  }

  .price-details {
    display: flex;
    align-items: center;
    gap: 8px;
    margin-bottom: 15px;
  }

  .price-details .current-price {
    font-size: 1.2rem;
    font-weight: 600;
    color: #007bff;
  }

  .price-details .original-price {
    font-size: 0.9rem;
    text-decoration: line-through;
    color: #999;
  }

  .price-details .discount {
    font-size: 0.9rem;
    color: #28a745;
    font-weight: 500;
  }

  .product-actions {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .quantity-box {
    display: flex;
    align-items: center;
    border: 1px solid #ddd;
    border-radius: 5px;
    overflow: hidden;
  }

  .quantity-box button {
    width: 35px;
    height: 35px;
    background: #fff;
    border: none;
    font-size: 1.1rem;
    color: #007bff;
    cursor: pointer;
    transition: background 0.2s, color 0.2s;
  }

  .quantity-box button:hover {
    background: #007bff;
    color: #fff;
  }

  .quantity-box button:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .quantity-box input {
    width: 50px;
    text-align: center;
    border: none;
    font-size: 1rem;
    font-weight: 500;
    color: #333;
    background: #f8f9fa;
  }

  .remove-link {
    font-size: 0.9rem;
    color: #dc3545;
    text-decoration: none;
    font-weight: 500;
    transition: color 0.2s;
  }

  .remove-link:hover {
    color: #b02a37;
  }

  .cart-summary {
    background: #fff;
    border-radius: 8px;
    padding: 25px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
    max-width: 600px;
    margin: 0 auto;
  }

  .cart-summary h3 {
    font-size: 1.5rem;
    font-weight: 600;
    color: #333;
    margin-bottom: 20px;
    text-align: center;
  }

  .summary-line {
    display: flex;
    justify-content: space-between;
    font-size: 1rem;
    margin-bottom: 12px;
    padding: 0 10px;
  }

  .summary-line.total {
    font-size: 1.2rem;
    font-weight: 600;
    color: #007bff;
    border-top: 1px solid #eee;
    padding-top: 15px;
  }

  .summary-line .discount-amount {
    color: #28a745;
  }

  .checkout-button {
    width: 100%;
    padding: 12px;
    background: #007bff;
    border: none;
    border-radius: 5px;
    color: #fff;
    font-size: 1rem;
    font-weight: 600;
    text-transform: uppercase;
    cursor: pointer;
    transition: background 0.3s;
    margin-top: 20px;
  }

  .checkout-button:hover {
    background: #0056b3;
  }

  .checkout-button:disabled {
    background: #ccc;
    cursor: not-allowed;
  }

  .empty-cart {
    text-align: center;
    padding: 40px;
    background: #fff;
    border-radius: 8px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
    max-width: 500px;
    margin: 0 auto;
  }

  .empty-cart p {
    font-size: 1.3rem;
    color: #666;
    margin-bottom: 20px;
  }

  .empty-cart a {
    display: inline-block;
    padding: 10px 20px;
    background: #007bff;
    color: #fff;
    text-decoration: none;
    border-radius: 5px;
    font-weight: 600;
    transition: background 0.3s;
  }

  .empty-cart a:hover {
    background: #0056b3;
  }
</style>

<div class="cart-header">
  <h1>My Cart</h1>
</div>

<section class="cart-content">
  <div class="cart-container">
    <% if (cartItems && cartItems.length > 0) { %>
      <div class="cart-products">
        <% cartItems.forEach(item => { %>
          <div class="cart-product" data-product-id="<%= item.productId._id %>">
            <img src="/uploads/product-images/<%= item.productId.productImage[0] || 'default.jpg' %>" 
                 alt="<%= item.productId.productName %>">
            <h5><%= item.productId.productName %></h5>
            <p class="details">Seller: <%= item.productId.brand || "Generic" %></p>
            <p class="details">Delivery by Thu Mar 27 | Free</p>
            <% 
              let stockClass = 'available';
              let stockText = `In Stock (${item.productId.quantity} available)`;
              if (!item.productId.isListed || item.productId.isDeleted) {
                stockClass = 'unavailable';
                stockText = 'Out of Stock';
              } else if (item.productId.quantity <= 0) {
                stockClass = 'unavailable';
                stockText = 'Out of Stock';
              } else if (item.productId.status === 'sold-out') {
                stockClass = 'unavailable';
                stockText = 'Sold Out';
              } else if (item.productId.status === 'unavailable') {
                stockClass = 'unavailable';
                stockText = 'Currently Unavailable';
              }
            %>
            <p class="stock <%= stockClass %>"><%= stockText %></p>
            <div class="price-details">
              <span class="current-price">₹<%= item.productId.salePrice %></span>
              <span class="original-price">₹<%= item.productId.regularPrice %></span>
              <% const discountPercent = Math.round((1 - item.productId.salePrice / item.productId.regularPrice) * 100); %>
              <% if (discountPercent > 0) { %>
                <span class="discount"><%= discountPercent %>% Off</span>
              <% } %>
            </div>
            <div class="product-actions">
              <div class="quantity-box">
                <button class="minus" data-product-id="<%= item.productId._id %>">-</button>
                <input type="text" class="quantity-input" value="<%= item.quantity %>" readonly>
                <button class="plus" data-product-id="<%= item.productId._id %>">+</button>
              </div>
              <a href="#" class="remove-link" data-product-id="<%= item.productId._id %>">Remove</a>
            </div>
          </div>
        <% }); %>
      </div>

      <div class="cart-summary">
        <h3>Order Summary</h3>
        <div class="summary-line">
          <span>Subtotal (<span id="item-count"><%= cartItems.length %></span> items)</span>
          <span id="subtotal">₹<%= subtotal %></span>
        </div>
        <div class="summary-line">
          <span>Discount</span>
          <span class="discount-amount">
            <% let totalDiscount = cartItems.reduce((sum, item) => sum + ((item.productId.regularPrice - item.productId.salePrice) * item.quantity), 0); %>
            -₹<span id="discount-amount"><%= totalDiscount %></span>
          </span>
        </div>
        <div class="summary-line">
          <span>Delivery</span>
          <span>Free</span>
        </div>
        <div class="summary-line total">
          <span>Total</span>
          <span id="cart-total">₹<%= total %></span>
        </div>
        <button class="checkout-button">Proceed to Checkout</button>
      </div>
    <% } else { %>
      <div class="empty-cart">
        <p>Your cart is empty</p>
        <a href="/shop">Continue Shopping</a>
      </div>
    <% } %>
  </div>
</section>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
  $(document).ready(function() {
     $('.quantity-box button').click(function(e) {
      e.preventDefault();
      const productId = $(this).data('product-id');
      const action = $(this).hasClass('plus') ? 'increment' : 'decrement';
      const $quantityInput = $(this).siblings('.quantity-input');
      const $productCard = $(this).closest('.cart-product');
      const $button = $(this);

      $button.prop('disabled', true);

      $.ajax({
        url: '/cartQuantity',
        method: 'POST',
        data: { productId, action },
        success: function(response) {
           const newQuantity = response.cart.items.find(item => 
            item.productId._id.toString() === productId
          ).quantity;
          $quantityInput.val(newQuantity);

          $('#subtotal').text(`₹${response.subtotal}`);
          $('#cart-total').text(`₹${response.total}`);
          
           let totalDiscount = 0;
          response.cart.items.forEach(item => {
            totalDiscount += (item.productId.regularPrice - item.productId.salePrice) * item.quantity;
          });
          $('#discount-amount').text(totalDiscount);

          $button.prop('disabled', false);
        },
        error: function(err) {
          $button.prop('disabled', false);
          Swal.fire({
            icon: 'error',
            title: 'Error',
            text: err.responseJSON.message,
            confirmButtonColor: '#007bff'
          });
        }
      });
    });

    // Remove item
    $('.remove-link').click(function(e) {
      e.preventDefault();
      const productId = $(this).data('product-id');
      const $link = $(this);

      $link.text('Removing...');

      $.ajax({
        url: '/deleteCart',
        method: 'POST',
        data: { productId },
        success: function(response) {
           $(`div[data-product-id="${productId}"]`).remove();
          
           $('#subtotal').text(`₹${response.subtotal}`);
          $('#cart-total').text(`₹${response.total}`);
          $('#item-count').text(response.cart.items.length);
          
           let totalDiscount = 0;
          response.cart.items.forEach(item => {
            totalDiscount += (item.productId.regularPrice - item.productId.salePrice) * item.quantity;
          });
          $('#discount-amount').text(totalDiscount);

          if (response.cart.items.length === 0) {
            location.reload();
          }

          Swal.fire({
            icon: 'success',
            title: 'Success',
            text: response.message,
            showConfirmButton: false,
            timer: 1500
          });
        },
        error: function(err) {
          $link.text('Remove');
          Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'Failed to remove item from cart',
            confirmButtonColor: '#007bff'
          });
        }
      });
    });

     $('.checkout-button').click(function() {
      if (this.disabled) return;
      $.ajax({
        url: '/cartCheckout',
        method: 'POST',
        success: function(response) {
          window.location.href = '/checkout';
        },
        error: function(err) {
          Swal.fire({
            icon: 'error',
            title: 'Error',
            text: err.responseJSON.message,
            confirmButtonColor: '#007bff'
          });
        }
      });
    });
  });
</script>
<%- include("../partials/user/footer.ejs") %>