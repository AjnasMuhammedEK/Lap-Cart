<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Checkout | LapCart</title>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/all.min.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    <style>
        .checkout-container {
            max-width: 1280px;
            margin: 2rem auto;
            padding: 0 1rem;
            display: grid;
            grid-template-columns: 1fr 380px;
            gap: 2rem;
        }

        .checkout-section {
            background: #ffffff;
            border-radius: 16px;
            padding: 2rem;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.03);
            border: 1px solid #f1f5f9;
            margin-bottom: 2rem;
        }

        .checkout-sidebar {
            background: #ffffff;
            border-radius: 16px;
            padding: 2rem;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.03);
            border: 1px solid #f1f5f9;
            position: sticky;
            top: 2rem;
            height: fit-content;
        }

        .checkout-title {
            font-size: 1.75rem;
            font-weight: 700;
            margin-bottom: 2rem;
            color: #111827;
            letter-spacing: -0.025em;
        }

        .checkout-address-list {
            display: flex;
            flex-direction: column;
            gap: 1rem;
            margin-bottom: 2rem;
        }

        .checkout-address-card {
            padding: 1.5rem;
            border: 2px solid #e5e7eb;
            border-radius: 12px;
            display: flex;
            align-items: center;
            cursor: pointer;
            transition: all 0.3s ease;
            background: #ffffff;
        }

        .checkout-address-card.checkout-selected {
            border-color: #3b82f6;
            background: #f8fafc;
            box-shadow: 0 2px 12px rgba(59, 130, 246, 0.1);
        }

        .checkout-address-card:hover {
            border-color: #3b82f6;
            transform: translateY(-2px);
        }

        .checkout-address-card input[type="radio"] {
            margin-right: 1.25rem;
            accent-color: #3b82f6;
            width: 20px;
            height: 20px;
        }

        .checkout-address-details p {
            font-size: 1rem;
            color: #6b7280;
            line-height: 1.6;
            margin: 0;
        }

        .checkout-address-details p:first-child {
            font-weight: 600;
            color: #111827;
            font-size: 1.1rem;
        }

        .checkout-addr-button-edit {
            background: #f3f4f6;
            border: none;
            padding: 0.5rem 1.25rem;
            border-radius: 8px;
            color: #374151;
            font-size: 0.9rem;
            font-weight: 500;
            margin-left: auto;
            cursor: pointer;
            transition: all 0.2s;
        }

        .checkout-addr-button-edit:hover {
            background: #e5e7eb;
            color: #1f2937;
        }

        .checkout-delivery-info {
            font-size: 0.95rem;
            color: #6b7280;
            margin-top: 1.5rem;
            padding: 1rem;
            background: #f8fafc;
            border-radius: 8px;
        }

        .checkout-delivery-info strong {
            color: #1f2937;
            font-weight: 600;
        }

        .checkout-button-group {
            display: flex;
            gap: 1rem;
            margin-top: 2rem;
            justify-content: flex-end;
        }

        .checkout-add-address-btn, .checkout-continue-btn, .checkout-place-order-btn {
            padding: 0.875rem 2rem;
            border: none;
            border-radius: 8px;
            font-size: 1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
        }

        .checkout-add-address-btn {
            background: #f59e0b;
            color: white;
        }

        .checkout-add-address-btn:hover {
            background: #d97706;
            transform: translateY(-1px);
        }

        .checkout-continue-btn {
            background: #3b82f6;
            color: white;
        }

        .checkout-continue-btn:hover {
            background: #2563eb;
            transform: translateY(-1px);
        }

        .checkout-place-order-btn {
            background: #10b981;
            color: white;
            width: 100%;
        }

        .checkout-place-order-btn:hover {
            background: #059669;
            transform: translateY(-1px);
        }

        .checkout-payment-methods {
            display: flex;
            flex-direction: column;
            gap: 1rem;
            margin-bottom: 2rem;
        }

        .checkout-payment-option {
            padding: 1.5rem;
            border: 2px solid #e5e7eb;
            border-radius: 12px;
            display: flex;
            align-items: center;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .checkout-payment-option.checkout-selected {
            border-color: #3b82f6;
            background: #f8fafc;
        }

        .checkout-payment-option:hover {
            border-color: #3b82f6;
            transform: translateY(-2px);
        }

        .checkout-order-summary {
            display: flex;
            flex-direction: column;
            gap: 1.5rem;
        }

        .checkout-item-details {
            display: flex;
            align-items: center;
            gap: 1.25rem;
            padding: 1.25rem;
            background: #f8fafc;
            border-radius: 12px;
            border: 1px solid #f1f5f9;
        }

        .checkout-item-details img {
            width: 60px;
            height: 60px;
            object-fit: cover;
            border-radius: 8px;
            border: 1px solid #e5e7eb;
        }

        .checkout-item-details p {
            font-size: 1rem;
            font-weight: 500;
            color: #1f2937;
            margin: 0;
        }

        .checkout-cart-total {
            padding: 1.5rem;
            background: #f8fafc;
            border-radius: 12px;
            border: 1px solid #f1f5f9;
        }

        .checkout-total-row {
            display: flex;
            justify-content: space-between;
            font-size: 1rem;
            color: #6b7280;
            margin-bottom: 1rem;
        }

        .checkout-total-row span:last-child {
            color: #1f2937;
            font-weight: 500;
        }

        .checkout-discount-section {
            background: #fef3c7;
            padding: 1rem;
            border-radius: 8px;
            margin-bottom: 1rem;
            display: flex;
            justify-content: space-between;
            border: 1px solid #fde68a;
        }

        .checkout-discount-section span:first-child {
            font-weight: 500;
            color: #92400e;
        }

        .checkout-discount-section span:last-child {
            font-weight: 600;
            color: #713f12;
        }

        .checkout-coupon-section {
            background: #e6f0ff;
            padding: 1rem;
            border-radius: 8px;
            margin-bottom: 1rem;
            display: flex;
            justify-content: space-between;
            border: 1px solid #bfdbfe;
        }

        .checkout-coupon-section span:first-child {
            font-weight: 500;
            color: #1e40af;
        }

        .checkout-coupon-section span:last-child {
            font-weight: 600;
            color: #1e3a8a;
        }

        .checkout-final-total {
            font-weight: 700;
            font-size: 1.25rem;
            color: #1f2937;
            margin-top: 1rem;
        }

        .checkout-modal-wrapper {
            border-radius: 16px;
            border: none;
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
            position: relative;
            z-index: 1050;
            background-color: #fff;
            overflow: hidden;
        }

        .checkout-modal-heading {
            background: #f8fafc;
            border-bottom: 1px solid #e5e7eb;
            padding: 1.75rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .checkout-modal-heading-text {
            font-size: 1.5rem;
            font-weight: 700;
            color: #111827;
            margin: 0;
            letter-spacing: -0.025em;
        }

        .checkout-close-btn {
            opacity: 0.7;
            transition: opacity 0.2s;
            background: none;
            border: none;
            cursor: pointer;
            padding: 0.5rem;
        }

        .checkout-close-btn:hover {
            opacity: 1;
        }

        .checkout-modal-content-area {
            padding: 2rem;
        }

        .checkout-form {
            display: flex;
            flex-direction: column;
            gap: 1.5rem;
        }

        .checkout-form-group {
            display: flex;
            flex-direction: column;
            gap: 0.5rem;
        }

        .checkout-form-label {
            font-size: 0.95rem;
            font-weight: 500;
            color: #1f2937;
        }

        .checkout-form-input, .checkout-form-select {
            padding: 0.875rem;
            font-size: 1rem;
            border: 1px solid #d1d5db;
            border-radius: 8px;
            background: #ffffff;
            color: #374151;
            transition: all 0.2s;
            box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
        }

        .checkout-form-input:focus, .checkout-form-select:focus {
            border-color: #3b82f6;
            box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
            outline: none;
        }

        .checkout-form-select {
            appearance: none;
            background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='12' height='12' fill='%23374151' viewBox='0 0 16 16'%3E%3Cpath d='M8 12l-6-6h12l-6 6z'/%3E%3C/svg%3E");
            background-repeat: no-repeat;
            background-position: right 1rem center;
            padding-right: 2.5rem;
        }

        .checkout-error-text {
            font-size: 0.875rem;
            color: #dc2626;
            display: none;
            margin-top: 0.25rem;
        }

        .checkout-modal-actions {
            border-top: 1px solid #e5e7eb;
            padding: 1.75rem;
            display: flex;
            justify-content: flex-end;
            gap: 1rem;
            background: #f8fafc;
        }

        .checkout Action-btn {
            background: #3b82f6;
            border: none;
            padding: 0.875rem 2rem;
            font-size: 1rem;
            font-weight: 600;
            border-radius: 8px;
            transition: all 0.3s ease;
            color: white;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
        }

        .checkout-submit-btn:hover {
            background: #2563eb;
            transform: translateY(-1px);
        }

        .checkout-cancel-btn {
            background: #f59e0b;
            border: none;
            padding: 0.875rem 2rem;
            font-size: 1rem;
            font-weight: 600;
            border-radius: 8px;
            transition: all 0.3s ease;
            color: white;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
        }

        .checkout-cancel-btn:hover {
            background: #d97706;
            transform: translateY(-1px);
        }

        @media (max-width: 1024px) {
            .checkout-container {
                grid-template-columns: 1fr;
                max-width: 800px;
            }

            .checkout-sidebar {
                position: static;
            }
        }

        @media (max-width: 768px) {
            .checkout-container {
                padding: 0 0.75rem;
            }

            .checkout-section, .checkout-sidebar {
                padding: 1.5rem;
            }

            .checkout-title {
                font-size: 1.5rem;
            }

            .checkout-modal-content-area {
                padding: 1.5rem;
            }

            .checkout-modal-actions {
                flex-direction: column;
                gap: 0.75rem;
            }

            .checkout-submit-btn, .checkout-cancel-btn {
                width: 100%;
            }

            .checkout-button-group {
                flex-direction: column;
                gap: 0.75rem;
            }

            .checkout-add-address-btn, .checkout-continue-btn, .checkout-place-order-btn {
                width: 100%;
            }
        }

        .checkout-offer-section {
            background: #e6f0ff;
            padding: 1rem;
            border-radius: 10px;
            border: 1px solid #bfdbfe;
            margin-top: 0.5rem;
            display: flex;
            flex-direction: column;
            gap: 0.5rem;
            transition: all 0.3s ease;
        }

        .checkout-offer-badge {
            display: inline-block;
            background: #3b82f6;
            color: white;
            font-size: 0.7rem;
            font-weight: 700;
            padding: 0.2rem 0.8rem;
            border-radius: 20px;
            letter-spacing: 0.05em;
            text-transform: uppercase;
            align-self: flex-start;
        }

        .checkout-offer-title {
            font-size: 1rem;
            font-weight: 600;
            color: #1e40af;
            margin: 0;
            line-height: 1.3;
        }

        .checkout-offer-price {
            font-size: 1rem;
            font-weight: 600;
            color: #1e3a8a;
            margin: 0;
        }

        .checkout-original-price {
            text-decoration: line-through;
            color: #6b7280;
            font-size: 0.9rem;
            margin-left: 0.5rem;
        }
    </style>
</head>
<body>
    <%- include("../partials/user/header.ejs") %>

    <div class="checkout-container">
        <div class="checkout-section">
            <h2 class="checkout-title">Select Address</h2>
            <div class="checkout-address-list">
                <% if (address && address.address.length > 0) { %>
                    <% address.address.forEach((add, index) => { %>
                        <label class="checkout-address-card <%= index === 0 ? 'checkout-selected' : '' %>" data-id="<%= add._id %>">
                            <input type="radio" name="address" <%= index === 0 ? 'checked' : '' %>>
                            <div class="checkout-address-details">
                                <p><strong><%= add.name %></strong></p>
                                <p><%= add.city %>, <%= add.state %>,</p>
                                <p><%= add.pincode %></p>
                                <p><%= add.landMark %></p>
                            </div>
                            <button class="checkout-addr-button-edit" onclick="editAddress('<%= add._id %>')">Edit Address</button>
                        </label>
                    <% }) %>
                <% } else { %>
                    <div>
                        <h3>No Address</h3>
                        <p>Please add a new address</p>
                    </div>
                <% } %>
            </div>
            <p class="checkout-delivery-info">Estimated Delivery Date: <strong>Monday, 13, 12:00 - 18:00</strong></p>
            <div class="checkout-button-group">
                <button class="checkout-add-address-btn" onclick="addAddress()">Add Address</button>
            </div>
        </div>

        <div class="checkout-sidebar">
            <h2 class="checkout-title">Order Summary</h2>
            <div class="checkout-order-summary">
                <% cart.items.forEach(item => { %>
                    <% const matchingOffer = result.find(data => data.product.productId._id.toString() === item.productId._id.toString()); %>
                    <div class="checkout-item-details">
                        <img src="/Uploads/product-images/<%= item.productId.productImage[0] || 'default.jpg' %>">
                        <div>
                            <p><%= item.productId.productName %></p>
                            <p>Qty: <%= item.quantity.toLocaleString('en-IN') %></p>
                            <% 
                              let itemPrice = item.productId.salePrice;
                              let discountAmount = 0;
                              let totalItemPrice = itemPrice * item.quantity;
                              let displayDiscount = 0;
                              if (matchingOffer && matchingOffer.bestOffer && matchingOffer.bestOffer.discountAmount > 0) {
                                if (matchingOffer.bestOffer.discountType === 'flat') {
                                  discountAmount = matchingOffer.bestOffer.discountAmount;
                                  itemPrice -= discountAmount;
                                  displayDiscount = discountAmount * item.quantity;
                                } else if (matchingOffer.bestOffer.discountType === 'percentage') {
                                  discountAmount = (item.productId.salePrice * matchingOffer.bestOffer.discountAmount) / 100;
                                  itemPrice -= discountAmount;
                                  displayDiscount = discountAmount * item.quantity;
                                }
                                totalItemPrice = Math.round(itemPrice) * item.quantity;
                              }
                            %>
                            <p class="checkout-offer-price">
                              ₹<%= totalItemPrice.toLocaleString('en-IN') %>
                              <% if (displayDiscount > 0) { %>
                                <span class="checkout-original-price">₹<%= (item.productId.salePrice * item.quantity).toLocaleString('en-IN') %></span>
                              <% } %>
                            </p>
                            <% if (matchingOffer && matchingOffer.bestOffer && matchingOffer.bestOffer.discountAmount > 0) { %>
                                <div class="checkout-offer-section">
                                    <span class="checkout-offer-badge">SPECIAL OFFER</span>
                                    <h3 class="checkout-offer-title"><%= matchingOffer.bestOffer.offerName %></h3>
                                    <% if (matchingOffer.bestOffer.discountType === 'flat') { %>
                                        <span class="discount">₹<%= Math.round(displayDiscount).toLocaleString('en-IN') %> Off</span>
                                    <% } else if (matchingOffer.bestOffer.discountType === 'percentage') { %>
                                        <span class="discount"><%= matchingOffer.bestOffer.discountAmount.toLocaleString('en-IN') %>% Off</span>
                                    <% } %>
                                </div>
                            <% } %>
                        </div>
                    </div>
                <% }) %>
                <div class="checkout-cart-total">
                    <div class="checkout-total-row">
                        <span>Subtotal</span>
                        <span>₹<%= Math.round(subtotal).toLocaleString('en-IN') %></span>
                    </div>
                    <div class="checkout-discount-section">
                        <span>Offer Discount</span>
                        <span>-₹<%= Math.round(totalDiscount).toLocaleString('en-IN') %></span>
                    </div>
                    <% if (appliedCoupon) { %>
                        <div class="checkout-coupon-section">
                            <span>Coupon Discount (<%= appliedCoupon.couponName %>)</span>
                            <span>-₹<%= Math.round(couponDiscount).toLocaleString('en-IN') %></span>
                        </div>
                    <% } %>
                    <div class="checkout-total-row">
                        <span>Delivery</span>
                        <span>Free</span>
                    </div>
                    <div class="checkout-total-row checkout-final-total">
                        <span>Total</span>
                        <span>₹<%= Math.round(total).toLocaleString('en-IN') %></span>
                    </div>
                </div>
                <button class="checkout-place-order-btn" onclick="placeOrder()">Place Order</button>
            </div>
        </div>

        <div class="checkout-section">
            <h2 class="checkout-title">Payment Method</h2>
            <div class="checkout-payment-methods">
                <label class="checkout-payment-option checkout-selected" data-method="COD">
                    <input type="radio" name="paymentMethod" value="COD" checked>
                    <div class="checkout-address-details">
                        <p><strong>Cash on Delivery (COD)</strong></p>
                        <p>Pay when your order is delivered</p>
                    </div>
                </label>
                <label class="checkout-payment-option" data-method="Wallet">
                    <input type="radio" name="paymentMethod" value="Wallet">
                    <div class="checkout-address-details">
                        <p><strong>Wallet</strong></p>
                        <p>Pay using your account wallet balance</p>
                    </div>
                </label>
                <label class="checkout-payment-option" data-method="Razorpay">
                    <input type="radio" name="paymentMethod" value="Razorpay">
                    <div class="checkout-address-details">
                        <p><strong>Razorpay</strong></p>
                        <p>Pay securely using Razorpay (UPI, Netbanking, Wallets)</p>
                    </div>
                </label>
            </div>
        </div>
    </div>

    <!-- Modal for Adding New Address -->
    <div class="modal" tabindex="-1" id="addAddressModal">
        <div class="modal-dialog">
            <div class="modal-content checkout-modal-wrapper">
                <div class="modal-header checkout-modal-heading">
                    <h5 class="modal-title checkout-modal-heading-text">Add New Address</h5>
                    <button type="button" class="btn-close checkout-close-btn" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body checkout-modal-content-area">
                    <form onsubmit="return ValidChecking()" action="/checkAddAddress" method="post" class="checkout-form" id="addAddressForm">
                        <div class="checkout-form-group">
                            <label class="checkout-form-label" for="addressType">Address Type</label>
                            <select class="checkout-form-select" id="addressType" name="addressType">
                                <option value="">Select Address Type</option>
                                <option value="Home">Home</option>
                                <option value="Work">Work</option>
                                <option value="Other">Other</option>
                            </select>
                            <div id="error-addressType" class="checkout-error-text"></div>
                        </div>
                        <div class="checkout-form-group">
                            <label class="checkout-form-label" for="name">Full Name</label>
                            <input class="checkout-form-input" type="text" id="name" name="name">
                            <div id="error-name" class="checkout-error-text"></div>
                        </div>
                        <div class="checkout-form-group">
                            <label class="checkout-form-label" for="city">City</label>
                            <input class="checkout-form-input" type="text" id="city" name="city">
                            <div id="error-city" class="checkout-error-text"></div>
                        </div>
                        <div class="checkout-form-group">
                            <label class="checkout-form-label" for="landMark">Landmark</label>
                            <input class="checkout-form-input" type="text" id="landMark" name="landMark">
                            <div id="error-landMark" class="checkout-error-text"></div>
                        </div>
                        <div class="checkout-form-group">
                            <label class="checkout-form-label" for="state">State</label>
                            <input class="checkout-form-input" type="text" id="state" name="state">
                            <div id="error-state" class="checkout-error-text"></div>
                        </div>
                        <div class="checkout-form-group">
                            <label class="checkout-form-label" for="pincode">Pincode</label>
                            <input class="checkout-form-input" type="number" id="pincode" name="pincode">
                            <div id="error-pincode" class="checkout-error-text"></div>
                        </div>
                        <div class="checkout-form-group">
                            <label class="checkout-form-label" for="phone">Phone Number</label>
                            <input class="checkout-form-input" type="number" id="phone" name="phone">
                            <div id="error-phone" class="checkout-error-text"></div>
                        </div>
                        <button type="submit" class="btn checkout-submit-btn">Save Address</button>
                    </form>
                </div>
                <div class="modal-footer checkout-modal-actions">
                    <button type="button" class="btn checkout-cancel-btn" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Edit Address Modal -->
    <div class="modal" tabindex="-1" id="editAddressModal">
        <div class="modal-dialog">
            <div class="modal-content checkout-modal-wrapper">
                <div class="modal-header checkout-modal-heading">
                    <h5 class="modal-title checkout-modal-heading-text">Edit Address</h5>
                    <button type="button" class="btn-close checkout-close-btn" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body checkout-modal-content-area">
                    <form onsubmit="return ValidEditChecking()" action="/checkeditAddress" method="post" class="checkout-form" id="editAddressForm">        
                        <input type="hidden" name="addressId" id="editAddressId">
                        <div class="checkout-form-group">
                            <label class="checkout-form-label" for="editAddressType">Address Type</label>
                            <select class="checkout-form-select" id="editAddressType" name="addressType">
                                <option value="">Select Address Type</option>
                                <option value="Home">Home</option>
                                <option value="Work">Work</option>
                                <option value="Other">Other</option>
                            </select>
                            <div id="error-editAddressType" class="checkout-error-text"></div>
                        </div>
                        <div class="checkout-form-group">
                            <label class="checkout-form-label" for="editName">Full Name</label>
                            <input class="checkout-form-input" type="text" id="editName" name="name">
                            <div id="error-editName" class="checkout-error-text"></div>
                        </div>
                        <div class="checkout-form-group">
                            <label class="checkout-form-label" for="editCity">City</label>
                            <input class="checkout-form-input" type="text" id="editCity" name="city">
                            <div id="error-editCity" class="checkout-error-text"></div>
                        </div>
                        <div class="checkout-form-group">
                            <label class="checkout-form-label" for="editLandMark">Landmark</label>
                            <input class="checkout-form-input" type="text" id="editLandMark" name="landMark">
                            <div id="error-editLandMark" class="checkout-error-text"></div>
                        </div>
                        <div class="checkout-form-group">
                            <label class="checkout-form-label" for="editState">State</label>
                            <input class="checkout-form-input" type="text" id="editState" name="state">
                            <div id="error-editState" class="checkout-error-text"></div>
                        </div>
                        <div class="checkout-form-group">
                            <label class="checkout-form-label" for="editPincode">Pincode</label>
                            <input class="checkout-form-input" type="number" id="editPincode" name="pincode">
                            <div id="error-editPincode" class="checkout-error-text"></div>
                        </div>
                        <div class="checkout-form-group">
                            <label class="checkout-form-label" for="editPhone">Phone Number</label>
                            <input class="checkout-form-input" type="number" id="editPhone" name="phone">
                            <div id="error-editPhone" class="checkout-error-text"></div>
                        </div>
                        <button type="submit" class="btn checkout-submit-btn">Save Address</button>
                    </form>
                </div>
                <div class="modal-footer checkout-modal-actions">
                    <button type="button" class="btn checkout-cancel-btn" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Show Add Address Modal
        function addAddress() {
            const modal = new bootstrap.Modal(document.getElementById('addAddressModal'));
            modal.show();
        }

        // Show Edit Address Modal and Populate Fields
        function editAddress(addId) {
        let editModalShow = new bootstrap.Modal(document.getElementById('editAddressModal'));
        editModalShow.show();
        document.getElementById('editAddressId').value = addId;
    }

        // Payment Method Selection
        document.querySelectorAll('.checkout-payment-option').forEach(option => {
            option.addEventListener('click', function() {
                document.querySelectorAll('.checkout-payment-option').forEach(opt => {
                    opt.classList.remove('checkout-selected');
                });
                this.classList.add('checkout-selected');
                this.querySelector('input[type="radio"]').checked = true;
            });
        });

        // Address Selection
        document.querySelectorAll('.checkout-address-card').forEach(card => {
            card.addEventListener('click', function(e) {
                if (e.target.classList.contains('checkout-addr-button-edit')) return;
                document.querySelectorAll('.checkout-address-card').forEach(c => {
                    c.classList.remove('checkout-selected');
                });
                this.classList.add('checkout-selected');
                this.querySelector('input[type="radio"]').checked = true;
            });
        });

       

        async function placeOrder() {
         try {
        const selectedAddress = document.querySelector('input[name="address"]:checked');
        const selectedPayment = document.querySelector('input[name="paymentMethod"]:checked');

        if (!selectedAddress) {
            throw new Error('Please select a delivery address');
        }
        if (!selectedPayment) {
            throw new Error('Please select a payment method');
        }

        const response = await fetch('/place-order', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
                selectedAddressId: selectedAddress.parentElement.dataset.id,
                paymentMethod: selectedPayment.value,
            }),
        });

        const data = await response.json();

        if (!response.ok) {
            throw new Error(data.message || 'Failed to place order');
        }

        if (data.razorpayOrder) {
            if (typeof Razorpay === 'undefined') {
                throw new Error('Razorpay SDK failed to load. Please check your network and try again.');
            }

            const options = {
                key: data.razorpayOrder.key,
                amount: data.razorpayOrder.amount,
                currency: data.razorpayOrder.currency,
                order_id: data.razorpayOrder.id,
                name: 'LapCart',
                description: 'Order Payment',
                handler: async function (response) {
                    try {
                        const verifyResponse = await fetch('/verify-razorpay-payment', {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({
                                razorpay_order_id: response.razorpay_order_id,
                                razorpay_payment_id: response.razorpay_payment_id,
                                razorpay_signature: response.razorpay_signature,
                                orderDetails: data.orderDetails,
                            }),
                        });

                        const verifyData = await verifyResponse.json();

                        if (verifyResponse.ok && verifyData.redirect) {
                            window.location.href = verifyData.redirect;
                        } else {
                            throw new Error(verifyData.message || 'Payment verification failed');
                        }
                    } catch (error) {
                        window.location.href = '/paymentfailedpage'; // Redirect on verification failure
                    }
                },
                prefill: {
                    name: '<%= user.name || "" %>',
                    email: '<%= user.email || "" %>',
                    contact: '<%= user.phone || "" %>',
                },
                theme: {
                    color: '#3b82f6',
                },
                method: {
                    card: true,
                    upi: true,
                    netbanking: true,
                    wallet: true,
                },
                modal: {
                    ondismiss: function () {
                        window.location.href = '/paymentfailedpage';  
                    }
                }
            };

            const rzp = new Razorpay(options);
            rzp.on('payment.failed', function (response) {
                window.location.href = '/paymentfailedpage';  
            });
            rzp.open();
        } else if (data.redirect) {
            window.location.href = data.redirect;
        } else {
            throw new Error(data.message || 'Failed to place order');
        }
    } catch (error) {
        window.location.href = '/paymentfailedpage';  
    }
}

         // Validation for Add Address Form
function ValidChecking() {
    let isValid = true;

    // Address Type
    const addressType = document.getElementById("addressType");
    const errorAddressType = document.getElementById("error-addressType");
    if (!addressType.value) {
        errorAddressType.style.display = "block";
        errorAddressType.innerHTML = "Please select an address type.";
        isValid = false;
    } else {
        errorAddressType.style.display = "none";
    }

    // Name
    const name = document.getElementById("name");
    const errorName = document.getElementById("error-name");
    const nameVal = name.value.trim();
    const namePattern = /^[A-Za-z\s]+$/;
    if (!nameVal) {
        errorName.style.display = "block";
        errorName.innerHTML = "Please enter a valid name.";
        isValid = false;
    } else if (!namePattern.test(nameVal)) {
        errorName.style.display = "block";
        errorName.innerHTML = "Name can only contain alphabets and spaces.";
        isValid = false;
    } else {
        errorName.style.display = "none";
    }

    // City
    const city = document.getElementById("city");
    const errorCity = document.getElementById("error-city");
    const cityVal = city.value.trim();
    if (!cityVal) {
        errorCity.style.display = "block";
        errorCity.innerHTML = "Please enter your city.";
        isValid = false;
    } else {
        errorCity.style.display = "none";
    }

    // Landmark
    const landMark = document.getElementById("landMark");
    const errorLandMark = document.getElementById("error-landMark");
    const landmarkVal = landMark.value.trim();
    if (!landmarkVal) {
        errorLandMark.style.display = "block";
        errorLandMark.innerHTML = "Please enter your landmark.";
        isValid = false;
    } else {
        errorLandMark.style.display = "none";
    }

    // State
    const state = document.getElementById("state");
    const errorState = document.getElementById("error-state");
    const stateVal = state.value.trim();
    if (!stateVal) {
        errorState.style.display = "block";
        errorState.innerHTML = "Please enter your state.";
        isValid = false;
    } else {
        errorState.style.display = "none";
    }

    // Pincode
    const pincode = document.getElementById("pincode");
    const errorPincode = document.getElementById("error-pincode");
    const pincodeVal = pincode.value.trim();
    const pincodePattern = /^[1-9][0-9]{5}$/;
    if (!pincodeVal || !pincodePattern.test(pincodeVal)) {
        errorPincode.style.display = "block";
        errorPincode.innerHTML = "Please enter a valid 6-digit pincode.";
        isValid = false;
    } else {
        errorPincode.style.display = "none";
    }

    // Phone
    const phone = document.getElementById("phone");
    const errorPhone = document.getElementById("error-phone");
    const phoneVal = phone.value.trim();
    const phonePattern = /^[6-9][0-9]{9}$/;
    if (!phoneVal || !phonePattern.test(phoneVal)) {
        errorPhone.style.display = "block";
        errorPhone.innerHTML = "Please enter a valid 10-digit phone number.";
        isValid = false;
    } else {
        errorPhone.style.display = "none";
    }

    return isValid;
}

function ValidEditChecking() {
    let isValid = true;

    const addressType = document.getElementById("editAddressType");
    const errorAddressType = document.getElementById("error-editAddressType");
    if (!addressType.value) {
        errorAddressType.style.display = "block";
        errorAddressType.innerHTML = "Please select an address type.";
        isValid = false;
    } else {
        errorAddressType.style.display = "none";
    }

    const name = document.getElementById("editName");
    const errorName = document.getElementById("error-editName");
    const nameVal = name.value.trim();
    const namePattern = /^[A-Za-z\s]+$/;
    if (!nameVal) {
        errorName.style.display = "block";
        errorName.innerHTML = "Please enter a valid name.";
        isValid = false;
    } else if (!namePattern.test(nameVal)) {
        errorName.style.display = "block";
        errorName.innerHTML = "Name can only contain alphabets and spaces.";
        isValid = false;
    } else {
        errorName.style.display = "none";
    }

    const city = document.getElementById("editCity");
    const errorCity = document.getElementById("error-editCity");
    const cityVal = city.value.trim();
    if (!cityVal) {
        errorCity.style.display = "block";
        errorCity.innerHTML = "Please enter your city.";
        isValid = false;
    } else {
        errorCity.style.display = "none";
    }

     const landMark = document.getElementById("editLandMark");
    const errorLandMark = document.getElementById("error-editLandMark");
    const landmarkVal = landMark.value.trim();
    if (!landmarkVal) {
        errorLandMark.style.display = "block";
        errorLandMark.innerHTML = "Please enter your landmark.";
        isValid = false;
    } else {
        errorLandMark.style.display = "none";
    }

     const state = document.getElementById("editState");
    const errorState = document.getElementById("error-editState");
    const stateVal = state.value.trim();
    if (!stateVal) {
        errorState.style.display = "block";
        errorState.innerHTML = "Please enter your state.";
        isValid = false;
    } else {
        errorState.style.display = "none";
    }

     const pincode = document.getElementById("editPincode");
    const errorPincode = document.getElementById("error-editPincode");
    const pincodeVal = pincode.value.trim();
    const pincodePattern = /^[1-9][0-9]{5}$/;
    if (!pincodeVal || !pincodePattern.test(pincodeVal)) {
        errorPincode.style.display = "block";
        errorPincode.innerHTML = "Please enter a valid 6-digit pincode.";
        isValid = false;
    } else {
        errorPincode.style.display = "none";
    }

     const phone = document.getElementById("editPhone");
    const errorPhone = document.getElementById("error-editPhone");
    const phoneVal = phone.value.trim();
    const phonePattern = /^[6-9][0-9]{9}$/;
    if (!phoneVal || !phonePattern.test(phoneVal)) {
        errorPhone.style.display = "block";
        errorPhone.innerHTML = "Please enter a valid 10-digit phone number.";
        isValid = false;
    } else {
        errorPhone.style.display = "none";
    }

    return isValid;
}
    </script>
    <%- include("../partials/user/footer.ejs") %>
</body>
</html>