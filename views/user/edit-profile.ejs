<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Edit Profile</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs@1.5.12/dist/cropper.min.css">
    <style>
       :root {
            --primary: #4361ee;
            --primary-dark: #3a56d4;
            --secondary: #f8f9fa;
            --text: #333333;
            --text-light: #6c757d;
            --border: #e1e5eb;
            --shadow: rgba(0, 0, 0, 0.08);
            --card-bg: #ffffff;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Poppins', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
        }

        body {
            background-color: var(--secondary);
            color: var(--text);
            min-height: 100vh;
            display: flex;
            flex-direction: column;
            line-height: 1.6;
        }

        /* Header Styles */
        .header {
            background: linear-gradient(135deg, var(--primary) 0%, var(--primary-dark) 100%);
            color: white;
            padding: 1.5rem 0;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        }

        .header-content {
            max-width: 600px;
            margin: 0 auto;
            padding: 0 2rem;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .header-title {
            display: flex;
            align-items: center;
            gap: 0.75rem;
        }

        .header-title h1 {
            font-size: 1.75rem;
            font-weight: 600;
            letter-spacing: 0.5px;
        }

        /* Main Content */
        .main-container {
            max-width: 600px;
            width: 100%;
            margin: 2.5rem auto;
            padding: 0 1.5rem;
            flex: 1;
        }

        .profile-card {
            background-color: var(--card-bg);
            border-radius: 16px;
            box-shadow: 0 8px 30px var(--shadow);
            overflow: hidden;
        }

        .profile-card-body {
            padding: 2rem;
        }

        /* Profile Image Styles */
        .profile-image-container {
            display: flex;
            flex-direction: column;
            align-items: center;
            margin-bottom: 2rem;
        }

        .avatar-wrapper {
            position: relative;
            margin-bottom: 1.5rem;
        }

        .profile-avatar {
            width: 150px;
            height: 150px;
            border-radius: 50%;
            object-fit: cover;
            border: 3px solid white;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        }

        .avatar-edit {
            position: absolute;
            right: 5px;
            bottom: 5px;
            width: 40px;
            height: 40px;
            background-color: var(--primary);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            cursor: pointer;
            box-shadow: 0 3px 10px rgba(0, 0, 0, 0.15);
            transition: all 0.2s ease;
        }

        .avatar-edit:hover {
            background-color: var(--primary-dark);
            transform: scale(1.05);
        }

        .avatar-edit input {
            position: absolute;
            opacity: 0;
            width: 100%;
            height: 100%;
            cursor: pointer;
        }

        .upload-btn {
            background-color: var(--secondary);
            color: var(--text);
            border: 1px solid var(--border);
            padding: 0.75rem 1.5rem;
            border-radius: 8px;
            display: flex;
            align-items: center;
            gap: 0.5rem;
            cursor: pointer;
            transition: all 0.2s ease;
            font-weight: 500;
        }

        .upload-btn:hover {
            background-color: rgba(0, 0, 0, 0.04);
        }

        .upload-btn input {
            display: none;
        }

        /* Form Fields */
        .form-group {
            margin-bottom: 1.5rem;
        }

        .form-label {
            display: block;
            font-weight: 500;
            margin-bottom: 0.5rem;
            color: var(--text);
        }

        .form-control {
            width: 100%;
            padding: 0.85rem 1rem;
            border: 1px solid var(--border);
            border-radius: 8px;
            font-size: 1rem;
            transition: all 0.2s ease;
        }

        .form-control:focus {
            outline: none;
            border-color: var(--primary);
            box-shadow: 0 0 0 3px rgba(67, 97, 238, 0.15);
        }

        /* Buttons */
        .form-footer {
            background-color: rgba(0, 0, 0, 0.02);
            padding: 1.5rem 2rem;
            display: flex;
            justify-content: flex-end;
            border-top: 1px solid var(--border);
        }

        .btn {
            padding: 0.85rem 2rem;
            border-radius: 8px;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.2s ease;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
            border: none;
            font-size: 0.95rem;
        }

        .btn-primary {
            background-color: var(--primary);
            color: white;
        }

        .btn-primary:hover {
            background-color: var(--primary-dark);
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(67, 97, 238, 0.2);
        }

        /* Footer */
        .site-footer {
            background-color: var(--text);
            color: rgba(255, 255, 255, 0.7);
            text-align: center;
            padding: 1.5rem;
            margin-top: auto;
        }

        /* Responsiveness */
        @media (max-width: 768px) {
            .header-content {
                padding: 0 1.25rem;
            }

            .main-container {
                margin: 1.5rem auto;
                padding: 0 1rem;
            }

            .profile-card-body,
            .form-footer {
                padding: 1.5rem;
            }
        }
        .image-preview {
            width: 150px;
            height: 150px;
            background-color: #f0f0f0;
            background-position: center;
            background-size: cover;
            background-repeat: no-repeat;
            border: 1px solid var(--border);
            margin-bottom: 15px;
            position: relative;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 50%;
        }

        .image-preview:hover::after {
            content: "Click to crop";
            position: absolute;
            background: rgba(0,0,0,0.7);
            width: 100%;
            height: 100%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 12px;
            color: white;
            border-radius: 50%;
        }

        .image-preview-empty::before {
            content: "+";
            font-size: 40px;
            color: #666;
        }

        /* Modal Styles */
        .crop-modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.8);
        }

        .crop-modal-content {
            position: relative;
            background-color: #fff;
            margin: 5% auto;
            padding: 20px;
            width: 80%;
            max-width: 600px;
            border-radius: 8px;
        }

        .crop-container {
            width: 100%;
            height: 400px;
            margin-bottom: 20px;
        }

        .crop-buttons {
            display: flex;
            justify-content: flex-end;
            gap: 10px;
        }

        .crop-btn {
            padding: 8px 16px;
            border-radius: 4px;
            border: none;
            cursor: pointer;
        }

        .crop-btn-cancel {
            background-color: #6c757d;
            color: white;
        }

        .crop-btn-crop {
            background-color: var(--primary);
            color: white;
        }

        .close-modal {
            position: absolute;
            top: 10px;
            right: 15px;
            font-size: 24px;
            color: #aaa;
            cursor: pointer;
        }

        .close-modal:hover {
            color: #333;
        }

        .hidden-file-input {
            position: absolute;
            width: 1px;
            height: 1px;
            padding: 0;
            margin: -1px;
            overflow: hidden;
            clip: rect(0, 0, 0, 0);
            border: 0;
        }
    </style>
</head>
<body>
    <header class="header">
        <div class="header-content">
            <div class="header-title">
                <i class="fas fa-user-edit"></i>
                <h1>Edit Profile</h1>
            </div>
        </div>
    </header>

    <main class="main-container">
        <form action="/updateProfile" method="POST" enctype="multipart/form-data">
            <div class="profile-card">
                <div class="profile-card-body">
                    <!-- Profile Image Section -->
                    <div class="profile-image-container">
                        <div class="image-preview <%- user.profileImage ? '' : 'image-preview-empty' %>" 
                             id="imagePreview1" 
                             onclick="triggerFileInput()"
                             style="background-image: url('<%= user.profileImage ? `/uploads/profiles/${user.userImage}` : '' %>')">
                        </div>
                        <input type="file" class="hidden-file-input" id="profileImage" name="userImage" 
                               accept="image/png, image/jpeg, image/jpg" onchange="handleFileSelect(event)">
                    </div>

                    <!-- Form Fields -->
                    <div class="form-group">
                        <label class="form-label" for="username">Username</label>
                        <input type="text" class="form-control" id="username" name="username" 
                               value="<%= user.name || '' %>" required placeholder="Enter your username">
                    </div>
                    
                    <div class="form-group">
                        <label class="form-label" for="phoneNumber">Phone Number</label>
                        <input type="text" class="form-control" id="phoneNumber" name="phone" 
                               value="<%= user.phone || '' %>" required placeholder="Enter your phone number">
                    </div>
                </div>

                <div class="form-footer">
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-save"></i> Save Changes
                    </button>
                </div>
            </div>
        </form>
    </main>

    <!-- Crop Modal -->
    <div id="cropModal" class="crop-modal">
        <div class="crop-modal-content">
            <span class="close-modal" onclick="closeCropModal()">×</span>
            <h5>Crop Image</h5>
            <div class="crop-container">
                <img id="cropImage" src="" alt="Image to crop">
            </div>
            <div class="crop-buttons">
                <button class="crop-btn crop-btn-cancel" onclick="closeCropModal()">Cancel</button>
                <button class="crop-btn crop-btn-crop" onclick="cropImage()">Crop</button>
            </div>
        </div>
    </div>

    <footer class="site-footer">
        <p>© 2025 Your Application. All rights reserved.</p>
    </footer>

    <script src="https://cdn.jsdelivr.net/npm/cropperjs@1.5.12/dist/cropper.min.js"></script>
    <script>
        let cropper;

        function triggerFileInput() {
            document.getElementById('profileImage').click();
        }

        function handleFileSelect(event) {
            const file = event.target.files[0];
            if (!file) return;

            const reader = new FileReader();
            reader.onload = function(e) {
                const cropModal = document.getElementById('cropModal');
                const cropImage = document.getElementById('cropImage');

                cropImage.src = e.target.result;
                cropModal.style.display = 'block';

                cropImage.onload = function() {
                    if (cropper) {
                        cropper.destroy();
                    }

                    cropper = new Cropper(cropImage, {
                        aspectRatio: 1,
                        viewMode: 1,
                        dragMode: 'move',
                        autoCropArea: 0.8,
                        restore: false,
                        guides: true,
                        center: true,
                        highlight: false,
                        cropBoxMovable: true,
                        cropBoxResizable: true,
                        toggleDragModeOnDblclick: false
                    });
                };
            };

            reader.readAsDataURL(file);
        }

        function closeCropModal() {
            const cropModal = document.getElementById('cropModal');
            cropModal.style.display = 'none';

            if (cropper) {
                cropper.destroy();
                cropper = null;
            }
        }

        function cropImage() {
            if (!cropper) return;

            const canvas = cropper.getCroppedCanvas({
                width: 150,
                height: 150,
                fillColor: '#fff',
                imageSmoothingEnabled: true,
                imageSmoothingQuality: 'high',
            });

            canvas.toBlob(function(blob) {
                const imagePreview = document.getElementById('imagePreview1');
                imagePreview.style.backgroundImage = `url('${canvas.toDataURL()}')`;
                imagePreview.classList.remove('image-preview-empty');

                const croppedFile = new File([blob], 'cropped-profile.jpg', { type: 'image/jpeg' });
                const dataTransfer = new DataTransfer();
                dataTransfer.items.add(croppedFile);

                const fileInput = document.getElementById('profileImage');
                fileInput.files = dataTransfer.files;

                closeCropModal();
            }, 'image/jpeg', 0.9);
        }
    </script>
</body>
</html>